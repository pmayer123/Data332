library(ggplot2)
ggplot(df_reasons_invoice, aes(x = Reason, y = total_invoice, fill = InvoicePaid))+
geom_bar(stat = "identity", position = "stack") +
labs(x = "Reason", y = "Invoice Due", fill = "Invoice Paid") +
scale_fill_manual(values = c("blue", "red"), labels = c("TRUE", "FALSE")) +
theme(axis.text = element_text(angle = 45, vjust = .5, hjust = 1))
vec <- c(0, 0, 0, 0, 0, 0)
vec
vec[1]
vec[1] <- 1000
vec
vec[c(1, 3, 5)] <- c(1, 1, 1)
vec
vec[4:6] <- vec[4:6]+1
vec
vec[7] <- 0
vec
deck2$new <- 1:52
head(deck)
head(deck2)
deck2[c(13, 26, 39, 52), ]
View(deck2)
deck2$new <- 1:52
head(deck2)
View(deck)
View(deck3)
View(deck)
deck2 <- deck
View(deck2)
deck2 <- deck
View(deck2)
deck2$new <- 1:52
head(deck2)
deck2[c(13, 26, 39, 52), ]
deck2[c(13, 26, 39, 52), 3]
deck2$value[c(13, 26, 39, 52)]
deck2$value[c(13, 26, 39, 52)] <- c(14, 14, 14, 14)
head(deck2, 13)
deck3 <- shuffle(deck)
head(deck3)
1>2
1> c(0, 1, 2)
c(1, 2, 3) == c(3, 2, 1)
1 %in% c(3, 4, 5)
c(1, 2) %in% c(3, 4, 5)
c(1, 2, 3) %in% c(3, 4, 5)
c(1, 2, 3, 4) %in% c(3, 4, 5)
deck2$face
deck2$face == "ace"
sum(deck2$face == "ace")
deck3$face == "ace"
deck3$value[deck3$face == "ace"]
deck3$value[deck3$face == "ace"] <- 14
head(deck3)
View(deck3)
View(deck4)
deck4 <- deck
deck4$value <- 0
head(deck4, 13)
deck4$suit == "hearts"
deck4$value[deck4$suit == "hearts"] <- 1
deck4$value[deck4$suit == "hearts"]
deck4[deck4$face == "queen",]
a <- c(1, 2, 3)
b <- c(1, 2, 3)
c <- c(1, 2, 4)
a == b
b == c
a == b & b == c
deck4$face == "queen" & deck4$suit == "spades"
"
queenOfSpades <- deck4$face == "queen" & deck4$suit == "spades"
queenOfSpades <- deck4$face == "queen" & deck4$suit == "spades"
deck4[queenOfSpades]
deck4[queenOfSpades, ]
deck4$value[queenOfSpades]
deck4$value[queenOfSpades] <- 13
deck4[queenOfSpades]
deck4[queenOfSpades, ]
w <- c(-1, 0, 1)
x <- c(5, 15)
y <- "February"
z <- c("Monday", "Tuesday", "Friday")
w > 0
10 < x & x < 20
y == "February"
all(z %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday",
"Saturday", "Sunday"))
deck5 <- deck
head(deck5)
facecard <- deck5$face %in% c("king", "queen", "jack")
deck5[facecard, ]
deck5$value[facecard] <- 10
head(deck5, 13)
1 + NA
NA == 1
c(NA, 1:50)
mean(c(NA, 1:50))
mean(c(NA, 1:50), na.rm = TRUE)
NA == NA
c(1, 2, 3, NA) == NA
is.na(NA)
vec <- c(1, 2, 3, NA)
is.na(vec)
deck5$value[deck5$face == "ace"] <- NA
head(deck5, 13)
save.image("~/Data332/Chapters/Chapter 5/Chapter5Exercise.RData")
library(readxl)
library(dplyr)
library(tidyverse)
library(tidyr)
library(lubridate)
library(ggplot2)
library(tidytext)
library(textdata)
library(stringr)
library(wordcloud)
library(reshape2)
library(readxl)
library(dplyr)
library(tidyverse)
library(tidyr)
library(lubridate)
library(ggplot2)
library(tidytext)
library(textdata)
library(stringr)
library(wordcloud)
library(reshape2)
df_complaints <- read_csv('Consumer_Complaints.csv')
setwd("~/Data332/Consumer Complaint/Data")
#Reading in Data
df_complaints <- read_csv('Consumer_Complaints.csv')
complaints <- df_complaints %>%
select(`Date received`, Product, Issue, `Consumer complaint narrative`, Company, State, `Complaint ID`) %>%
filter(!is.na(`Consumer complaint narrative`) & `Consumer complaint narrative` != "") %>%
unnest_tokens(word, `Consumer complaint narrative`)
get_sentiments("bing")
get_sentiments("nrc")
product <- df_complaints %>%
group_by(Product) %>%
summarize(count = n())
ggplot(product, aes(x = Product, y = count))+
geom_col()+
labs(y = "Number of Complaints")+
theme(axis.text = element_text(angle = 45, vjust = .5, hjust = 1))
complaints <- df_complaints %>%
select(`Date received`, Product, Issue, `Consumer complaint narrative`, Company, State, `Complaint ID`) %>%
filter(!is.na(`Consumer complaint narrative`) & `Consumer complaint narrative` != "") %>%
unnest_tokens(word, `Consumer complaint narrative`) %>%
mutate(row_id = row_number())
View(complaints)
sentiments <- complaints %>%
inner_join(get_sentiments("bing")) %>%
mutate(index = row_number() %/% 10) %>%
count(Company, index, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = 0) %>%
mutate(sentiment = positive - negative)
tidy_books <- austen_books() %>%
group_by(book) %>%
mutate(
linenumber = row_number(),
chapter = cumsum(str_detect(text,
regex("^chapter [\\divxlc]",
ignore_case = TRUE)))) %>%
ungroup() %>%
unnest_tokens(word, text)
library(janeaustenr)
tidy_books <- austen_books() %>%
group_by(book) %>%
mutate(
linenumber = row_number(),
chapter = cumsum(str_detect(text,
regex("^chapter [\\divxlc]",
ignore_case = TRUE)))) %>%
ungroup() %>%
unnest_tokens(word, text)
View(tidy_books)
sentiments <- complaints %>%
inner_join(get_sentiments("bing")) %>%
mutate(index = row_number() %/% 80) %>%
count(Company, index, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = 0) %>%
mutate(sentiment = positive - negative)
View(tidy_books)
View(sentiments)
bing_word_counts <- complaints %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup()
bing_word_counts
View(bing_word_counts)
bing_word_counts <- complaints %>%
group_by(Company) %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup()
View(bing_word_counts)
top_companies <- complaints %>%
group_by(Company) %>%
summarize(num_complaints = n()) %>%
arrange(desc(num_complaints)) %>%
top_n(5)
filtered_complaints <- complaints %>%
filter(Company %in% top_companies$Company)
bing_word_counts <- filtered_complaints %>%
group_by(Company) %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup()
View(bing_word_counts)
ggplot(top_words_per_company, aes(x = reorder(word, n), y = n, fill = sentiment)) +
geom_col(position = "stack") +
facet_wrap(~ Company, scales = "free", ncol = 2) +
labs(title = "Top 10 Words for Companies with Most Complaints",
x = "Word",
y = "Count",
fill = "Sentiment") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom") +
scale_fill_manual(values = c("positive" = "green", "negative" = "red")) +
coord_flip()
ggplot(top_words_per_company, aes(x = reorder(word, n), y = n, fill = sentiment)) +
geom_col(position = "stack") +
facet_wrap(~ Company, scales = "free", ncol = 2) +
labs(title = "Top 10 Words for Companies with Most Complaints",
x = "Word",
y = "Count",
fill = "Sentiment") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom") +
scale_fill_manual(values = c("positive" = "green", "negative" = "red")) +
coord_flip()
top_words_per_company <- bing_word_counts %>%
group_by(Company) %>%
slice_max(order_by = n, n = 10)
ggplot(top_words_per_company, aes(x = reorder(word, n), y = n, fill = sentiment)) +
geom_col(position = "stack") +
facet_wrap(~ Company, scales = "free", ncol = 2) +
labs(title = "Top 10 Words for Companies with Most Complaints",
x = "Word",
y = "Count",
fill = "Sentiment") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom") +
scale_fill_manual(values = c("positive" = "green", "negative" = "red")) +
coord_flip()
ggplot(top_words_per_company, aes(x = reorder(word, n), y = n, fill = sentiment)) +
geom_col(position = "stack", color = "black", size = 0.3) +
facet_wrap(~ Company, scales = "free", ncol = 2) +
labs(title = "Top 10 Words for Companies with Most Complaints",
x = "Word",
y = "Count",
fill = "Sentiment") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10, color = "black"),
axis.text.y = element_text(size = 10, color = "black"),
axis.title = element_text(size = 12, color = "black"),
legend.title = element_text(size = 12, color = "black"),
legend.text = element_text(size = 10, color = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white", color = "black", size = 0.5),
strip.text = element_text(size = 12, color = "black", face = "bold"),
strip.background = element_rect(fill = "lightgray", color = "black", size = 0.5),
plot.title = element_text(size = 16, color = "black", hjust = 0.5, face = "bold"),
plot.subtitle = element_text(size = 14, color = "black", hjust = 0.5),
plot.caption = element_text(size = 10, color = "black", hjust = 1)) +
scale_fill_manual(values = c("positive" = "#2ca02c", "negative" = "#d62728")) +
coord_flip()
ggplot(top_words_per_company, aes(x = reorder(word, n), y = n, fill = sentiment)) +
geom_col(position = "stack", color = "black", size = 0.3) +
facet_wrap(~ Company, scales = "free", ncol = 2) +
labs(title = "Top 10 Words for Companies with Most Complaints",
x = "Word",
y = "Count",
fill = "Sentiment") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10, color = "black"),
axis.text.y = element_text(size = 10, color = "black"),
axis.title = element_text(size = 12, color = "black"),
legend.title = element_text(size = 12, color = "black"),
legend.text = element_text(size = 10, color = "black"),
panel.background = element_rect(fill = "white", color = "black", size = 0.5),
strip.text = element_text(size = 12, color = "black", face = "bold"),
strip.background = element_rect(fill = "lightgray", color = "black", size = 0.5),
plot.title = element_text(size = 16, color = "black", hjust = 0.5, face = "bold"),
plot.subtitle = element_text(size = 14, color = "black", hjust = 0.5),
plot.caption = element_text(size = 10, color = "black", hjust = 1)) +
scale_fill_manual(values = c("positive" = "#2ca02c", "negative" = "#d62728")) +
coord_flip()
View(bing_word_counts)
complaints %>%
anti_join(bing_word_counts) %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100))
complaints %>%
anti_join(bing_word_counts) %>%
filter(Company == "Equifax")
count(word) %>%
with(wordcloud(word, n, max.words = 100))
complaints %>%
anti_join(complaints) %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100))
complaints %>%
filter(Company == "Equifax")
anti_join(complaints) %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100))
equifax <- bing_word_counts %>%
filter(Company == "Equifax")
View(equifax)
complaints %>%
anti_join(equifax) %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100))
equifax <- complaints %>%
filter(Company == "Equifax")
complaints %>%
anti_join(equifax) %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100))
equifax <- bing_word_counts %>%
filter(Company == "Equifax")
View(top_words_per_company)
View(bing_word_counts)
equifax %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100))
equifax %>%
count(word) %>%
with(wordcloud(word, n)
bing_word_counts %>%
bing_word_counts %>%
anti_join(equifax) %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100))
complaints %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100))
complaints %>%
inner_join(equifax) %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100))
complaints %>%
inner_join(equifax) %>%
count(word) %>%
with(wordcloud(word, n, max.words = 80))
library(readxl)
library(dplyr)
library(tidyverse)
library(tidyr)
library(lubridate)
library(ggplot2)
library(tidytext)
library(textdata)
library(stringr)
library(wordcloud)
library(reshape2)
#Reading in Data
df_complaints <- read_csv('Consumer_Complaints.csv')
#Cleaning/Filtering Data
complaints <- df_complaints %>%
select(`Date received`, Product, Issue, `Consumer complaint narrative`, Company, State, `Complaint ID`) %>%
filter(!is.na(`Consumer complaint narrative`) & `Consumer complaint narrative` != "") %>%
unnest_tokens(word, `Consumer complaint narrative`) %>%
mutate(row_id = row_number())
#Getting Sentiments
get_sentiments("bing")
get_sentiments("nrc")
#Getting the number of complaints per product
product <- df_complaints %>%
group_by(Product) %>%
summarize(count = n())
ggplot(product, aes(x = Product, y = count))+
geom_col()+
labs(y = "Number of Complaints")+
theme(axis.text = element_text(angle = 45, vjust = .5, hjust = 1))
#Text Analysis on top 10 words with companies with most complaints
top_companies <- complaints %>%
group_by(Company) %>%
summarize(num_complaints = n()) %>%
arrange(desc(num_complaints)) %>%
top_n(5)
filtered_complaints <- complaints %>%
filter(Company %in% top_companies$Company)
bing_word_counts <- filtered_complaints %>%
group_by(Company) %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup()
top_words_per_company <- bing_word_counts %>%
group_by(Company) %>%
slice_max(order_by = n, n = 10)
ggplot(top_words_per_company, aes(x = reorder(word, n), y = n, fill = sentiment)) +
geom_col(position = "stack", color = "black", size = 0.3) +
facet_wrap(~ Company, scales = "free", ncol = 2) +
labs(title = "Top 10 Words for Companies with Most Complaints",
x = "Word",
y = "Count",
fill = "Sentiment") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10, color = "black"),
axis.text.y = element_text(size = 10, color = "black"),
axis.title = element_text(size = 12, color = "black"),
legend.title = element_text(size = 12, color = "black"),
legend.text = element_text(size = 10, color = "black"),
panel.background = element_rect(fill = "white", color = "black", size = 0.5),
strip.text = element_text(size = 12, color = "black", face = "bold"),
strip.background = element_rect(fill = "lightgray", color = "black", size = 0.5),
plot.title = element_text(size = 16, color = "black", hjust = 0.5, face = "bold"),
plot.subtitle = element_text(size = 14, color = "black", hjust = 0.5),
plot.caption = element_text(size = 10, color = "black", hjust = 1)) +
scale_fill_manual(values = c("positive" = "#2ca02c", "negative" = "#d62728")) +
coord_flip()
#WordCloud of the Company with the most complaints
equifax <- bing_word_counts %>%
filter(Company == "Equifax")
complaints %>%
inner_join(equifax) %>%
count(word) %>%
with(wordcloud(word, n, max.words = 80))
complaints %>%
inner_join(equifax) %>%
count(word) %>%
with(wordcloud(word, n, max.words = 70))
complaints %>%
inner_join(equifax) %>%
count(word) %>%
with(wordcloud(word, n, max.words = 75))
complaints %>%
inner_join(equifax) %>%
count(word) %>%
with(wordcloud(word, n, max.words = 60))
complaints %>%
inner_join(equifax) %>%
count(word) %>%
with(wordcloud(word, n, , scale = c(3, 0.5, max.words = 80))
complaints %>%
complaints %>%
inner_join(equifax) %>%
count(word) %>%
with(wordcloud(word, n, , scale = c(3, 0.5), max.words = 80)
complaints %>%
complaints %>%
inner_join(equifax) %>%
count(word) %>%
with(wordcloud(word, n, , scale = c(3, 0.5), max.words = 80, width = 800, height = 400)
complaints %>%
complaints %>%
inner_join(equifax) %>%
count(word) %>%
with(wordcloud(word, n, , scale = c(3, 0.5), max.words = 80, width = 1000, height = 400)
complaints %>%
complaints %>%
inner_join(equifax) %>%
count(word) %>%
with(wordcloud(word, n, , scale = c(3, 0.5), max.words = 80, width = 800, height = 400))
complaints %>%
inner_join(equifax) %>%
count(word) %>%
with(wordcloud(word, n, , scale = c(3, 0.5), max.words = 80, width = 800, height = 500))
ggplot(top_words_per_company, aes(x = reorder(word, n), y = n, fill = sentiment)) +
geom_col(position = "stack", color = "black", size = 0.3) +
facet_wrap(~ Company, scales = "free", ncol = 2) +
labs(title = "Top 10 Words for Companies with Most Complaints",
x = "Word",
y = "Count",
fill = "Sentiment") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10, color = "black"),
axis.text.y = element_text(size = 10, color = "black"),
axis.title = element_text(size = 12, color = "black"),
legend.title = element_text(size = 12, color = "black"),
legend.text = element_text(size = 10, color = "black"),
panel.background = element_rect(fill = "white", color = "black", size = 0.5),
strip.text = element_text(size = 12, color = "black", face = "bold"),
strip.background = element_rect(fill = "lightgray", color = "black", size = 0.5),
plot.title = element_text(size = 16, color = "black", hjust = 0.5, face = "bold"),
plot.subtitle = element_text(size = 14, color = "black", hjust = 0.5),
plot.caption = element_text(size = 10, color = "black", hjust = 1)) +
scale_fill_manual(values = c("positive" = "#2ca02c", "negative" = "#d62728")) +
coord_flip()
ggplot(product, aes(x = Product, y = count, fill = Product)) +
geom_col(width = 0.7, color = "black") +  # Adjust width and border color
labs(
title = "Number of Complaints by Product",
x = "Product",
y = "Number of Complaints",
fill = "Product"
) +
scale_fill_viridis_d(option = "plasma", aesthetics = "fill") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 1),
axis.title = element_text(size = 12, face = "bold"),
legend.title = element_text(size = 10, face = "bold"),
legend.text = element_text(size = 9),
plot.title = element_text(size = 16, face = "bold"),
plot.subtitle = element_text(size = 12),
plot.caption = element_text(size = 10),
panel.grid.major = element_line(color = "lightgray", size = 0.2),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
legend.position = "right"
)
View(complaints)
save.image("~/Data332/Consumer Complaint/ConsumerComplaint.RData")
